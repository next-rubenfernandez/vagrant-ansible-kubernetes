---
# tasks file for kubernetes

- name: Kubernetes | Add Kubernetes yum repository (RHEL/CentOS)
  yum_repository:
    name: Kubernetes
    description: Kubernetes Repository
    file: kubernetes
    baseurl: http://yum.kubernetes.io/repos/kubernetes-el7-x86_64
    enabled: yes
    gpgcheck: yes
    gpgkey: 
      - https://packages.cloud.google.com/yum/doc/yum-key.gpg 
      - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

- name: Kubernetes | Put SELinux in permissive mode, logging actions that would be blocked.
  selinux: 
    policy: targeted 
    state: permissive

- name: Kubernetes | Install kubernetes packages (RHEL/CentOS)
  yum:
    name: "{{ kubernetes_packages }}"
    update_cache: yes
    state: installed
    disable_excludes: kubernetes

- name: Kubernetes | Enable kubelet service 
  systemd:
    name: kubelet
    daemon_reload: yes
    state: started
    enabled: yes

- name: Kubernetes | Disable SWAP since kubernetes can't work with swap enabled (1/2)
  shell: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: Kubernetes | Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)
  replace:
    path: /etc/fstab
    regexp: '^(.+?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Kubernetes | Disable swappiness and pass bridged IPv4 traffic to iptable's chains
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
  with_items:
    - { name: 'vm.swappiness', value: '0' }
    - { name: 'net.bridge.bridge-nf-call-iptables', value: '1' }

- name: Kubernetes | Config completation bash kubectl
  command: kubectl completion bash

# - name: Kubernetes | Configure node ip
#   lineinfile:
#     path: /etc/sysconfig/kubelet
#     line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
#   notify: kubelet_restart

# - name: Create service drop-in directory
#   file:
#     path: /etc/systemd/system/kubelet.service.d/
#     state: directory
#     owner: ""
#     group: ""
#     mode: 0755

# - name: Copy kubeadm conf to drop-in directory
#   template: src=20-extra-args.conf.j2 dest=/etc/systemd/system/kubelet.service.d/20-extra-args.conf

# - name: Initialize the Kubernetes cluster using kubeadm
#   command: kubeadm init --apiserver-advertise-address="192.168.10.2" --apiserver-cert-extra-sans="192.168.10.2"  --node-name k8s-master --pod-network-cidr=192.168.10.0/16

# - name: Setup kubeconfig for vagrant user
#   command: "{{ item }}"
#   with_items:
#     - mkdir -p /home/vagrant/.kube
#     - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
#     - chown vagrant:vagrant /home/vagrant/.kube/config

# - name: Install calico pod network
#   become: false
#   command: kubectl create -f https://docs.projectcalico.org/v3.4/getting-started/kubernetes/installation/hosted/calico.yaml

# - name: Generate join command
#   command: kubeadm token create --print-join-command
#   register: join_command

# - name: Copy join command to local file
#   local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"